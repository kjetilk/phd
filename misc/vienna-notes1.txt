1. Reality check 
   * Spider SPARQL endpoints to check caching features
   * Spider other RDF sources?
   => Workshop paper

2. Cache results and prefetch
   * Simplifying assumption: Single remote source
   * !!! Only safe queries (BNODE hell, unprojected variables, FILTERs)
   * Key: triple / BGP + ServiceURI  Wildcards? 
     	    => (workshop paper recommending checksum/hash?)

   * !!! Value : RDF binary? serialization (to RAM or disk) 
   * Metadata : 
     	      * The query, 
	      * frequency counts, 
	      * last-modified?,
	      * content-length, 
	      * triple-count?

3. What kind of query processing in CDN / Forward proxy?
   * Single-server, many clients, clients reuse the cache of others

=> Conference paper

4. Subquery pattern mining

5. Cost model
   * Incorporate the costs of 
     - examining service descriptions/hypermedia
     - slurping data dumps
     - Using LDF queries
     - Using LD
     - Using local cache
     - Using remote SPARQL endpoint
   * Simplifying assumption: Rely on HTTP headers to asses freshness
     (i.e. take RFC 7234 as axiomatic truth, meaning it is fresh
     unless the remote source is down, in which case we use it anyway)

=> Conference paper
