Semantic Web is a Web technology, but it's community is not good at
exploiting it.

The HTTP protocol has some good features for caching, defined in
RFC7234 and RFC7232. Both specifications note that the performance
gains from supporting them can be substantial. Caching can be done in
several places in the Internet. Server-side caching resembles database
caching, and is already well studied. There exists also Content
Delivery Networks, capacity that is usually rented by large content
providers to place proxies close to consumers. These caching proxies
often exists at large ISPs. Furthermore, ISPs and large institutions
can deploy caches in their own infrastructure. Finally, clients can
have their own cache.

Whenever content changes seldomly, this means that the request doesn't
need to be handled by the server, or handled much more lightly than
answering a query. The Dynamic Linked Data Observatory recently found
that 62% of the documents they survey changed so seldomly, they would
be prime targets for very long term caching. However, also short term
caching should be of benefit, even down to a few seconds if there are
results to common queries.

We recently did a survey of the presence of RFC7234 headers in the
responses from SPARQL Endpoints. We utilized the SPARQLES survey,
where we found 549 endpoints. Out of these, we skipped the ones that
have been deemed by them to be unresponsive over a long time
period. We executed a SPARQL query on the remaining. Out of those,
30 failed to provide a usable response within 30 seconds. Out of the
remaining, 106 responded with a Cache-Control header, and 61 with a
Expires header.

While this is a relatively high number, many responded to prohibit
caching. Most of those that allow caching are hosted by RBKExplorer,
and sets a maximum age for the cache to 300 seconds. Data.gov.uk
displays a complete misunderstanding of the caching system, while they
set a maximum age of 3600 seconds, they also prohibit caching. The
only endpoint in the data set that allows longer caching is deployed
and partly developed by this author.

It is unlikely that the data in SPARQL endpoints have substantially
different dynamicity characteristics than the data surveyed by the
Observatory, and therefore, it is very likely that the benefit from
adopting practices that are common in the Web at large will be
substantial. A case in point is DBPedia, which exposes caching headers
for the LOD part, but not for the SPARQL endpoint, even though the
data is the same, and changes with the same frequency, i.e. almost
annually. 

We are committed to further research in this area, but it would help
if the community started adding caching headers to their SPARQL
endpoints. Furthermore, to enable RFC7232 cache validation, the
community should also ensure that the last modification time of a
query result can be computed much less expensively than to recompute
the result of the same query.
